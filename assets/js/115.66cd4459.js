(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{405:function(e,t,r){"use strict";r.r(t);var _=r(13),v=Object(_.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"安全过滤器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安全过滤器"}},[e._v("#")]),e._v(" 安全过滤器")]),e._v(" "),t("p",[e._v("为了保护 URL，"),t("em",[e._v("pac4j")]),e._v(" 实现提供了安全过滤器，将工作委托给 "),t("code",[e._v("DefaultSecurityLogic")]),e._v(" 组件。")]),e._v(" "),t("h2",{attrs:{id:"_1-行为"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-行为"}},[e._v("#")]),e._v(" 1）行为")]),e._v(" "),t("p",[t("code",[e._v("DefaultSecurityLogic")]),e._v(" 具有以下行为 ：")]),e._v(" "),t("ul",[t("li",[e._v("如果 HTTP 请求与匹配器配置匹配（或未定义匹配器），则应用安全性。否则，将自动授予用户访问权限。")]),e._v(" "),t("li",[e._v("首先，如果用户未经过认证（没有数据 "),t("em",[e._v("profile")]),e._v("），并且在 clients 参数中定义了一些客户端，则尝试直接客户端登录。")]),e._v(" "),t("li",[e._v("然后，如果用户具有配置文件，则根据授权者配置检查授权。如果授权有效，则授予用户访问权限。否则，将显示 "),t("code",[e._v("403")]),e._v(" 错误页面。")]),e._v(" "),t("li",[e._v("最后，如果用户没有经过认证（没有数据 "),t("em",[e._v("profile")]),e._v("），如果第一个定义的客户端是客户端配置中的间接客户机，则会将其重定向到适当的认证提供者。否则，将显示 "),t("code",[e._v("401")]),e._v(" 错误页面。")])]),e._v(" "),t("p",[e._v("设置 "),t("code",[e._v("401")]),e._v(" HTTP 状态代码后，如果 "),t("code",[e._v("WWW-Authenticate")]),e._v(" 头不存在（符合 HTTP 规范），则会添加一个值为："),t("code",[e._v('Bearer ream="pac4j"')]),e._v(" 的 "),t("code",[e._v("WWW-Authenticate")]),e._v(" 头。如果 "),t("code",[e._v("WWW-Authenticate")]),e._v(" 头不存在，则可以通过以下设置使用 "),t("code",[e._v("403")]),e._v(" HTTP状态代码："),t("code",[e._v("HttpActionHelper.setAlwaysUse401ForUnauthenticated(false);")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"_2-选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-选项"}},[e._v("#")]),e._v(" 2）选项")]),e._v(" "),t("p",[e._v("以下选项可用：")]),e._v(" "),t("h3",{attrs:{id:"a-config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-config"}},[e._v("#")]),e._v(" a）"),t("code",[e._v("config")])]),e._v(" "),t("p",[e._v("参阅"),t("RouterLink",{attrs:{to:"/v4.5/config.html"}},[e._v("安全配置")])],1),e._v(" "),t("h3",{attrs:{id:"b-clients"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b-clients"}},[e._v("#")]),e._v(" b）"),t("code",[e._v("clients")])]),e._v(" "),t("p",[e._v("这是用于认证的"),t("RouterLink",{attrs:{to:"/v4.5/clients.html"}},[e._v("客户端")]),e._v("名称列表（用逗号分隔）的字符串。它是一个可选参数。")],1),e._v(" "),t("p",[e._v("在所有情况下，此过滤器都要求用户经过认证。因此，如果客户端为空或未定义，则用户必须事先经过认证，否则返回 "),t("code",[e._v("401")]),e._v(" 错误。")]),e._v(" "),t("p",[e._v("通过使用请求参数："),t("code",[e._v("force_client")]),e._v("，可以在过滤器的所有已定义客户端中选择特定客户端。")]),e._v(" "),t("h3",{attrs:{id:"c-authorizers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-authorizers"}},[e._v("#")]),e._v(" c）"),t("code",[e._v("authorizers")])]),e._v(" "),t("p",[e._v("这是一个用于检查授权的"),t("RouterLink",{attrs:{to:"/v4.5/authorizer.html"}},[e._v("授权器")]),e._v("名称列表字符串（用逗号分隔）。它是一个可选参数。")],1),e._v(" "),t("p",[e._v("如果授权器为空或未定义，则将对 web 应用程序应用默认授权器："),t("code",[e._v("csrfCheck")]),e._v("（至少定义了一个 "),t("code",[e._v("IndirectClient")]),e._v("）且对于 web 服务没有授权器应用。")]),e._v(" "),t("p",[e._v("你还可以使用"),t("RouterLink",{attrs:{to:"/v4.5/authorizer.html#默认授权器名称"}},[e._v("开箱即用的授权器")]),e._v("，无需在安全配置中定义即可使用。以“+”开头 "),t("code",[e._v("authorizers")]),e._v(" 字符串，将其他授权器添加到默认授权器中，或不替换它们。")],1),e._v(" "),t("h3",{attrs:{id:"d-matchers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#d-matchers"}},[e._v("#")]),e._v(" d）"),t("code",[e._v("matchers")])]),e._v(" "),t("p",[e._v("这是请求必须满足的"),t("RouterLink",{attrs:{to:"/v4.5/matcher.html"}},[e._v("匹配器")]),e._v("名称列表（用逗号分隔），以检查认证/授权。它是一个可选参数。")],1),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("matchers")]),e._v(" 为空或未定义，则满足该条件，并且 "),t("code",[e._v("securityHeaders")]),e._v("、"),t("code",[e._v("csrfToken")]),e._v(" 匹配器应用于 web 应用程序，或者 "),t("code",[e._v("securityHeaders")]),e._v(" 匹配器适用于 web 服务。")]),e._v(" "),t("p",[e._v("你还可以使用"),t("RouterLink",{attrs:{to:"/v4.5/matcher.html#_3-默认匹配器"}},[e._v("开箱即用的匹配器")]),e._v("，而无需在安全配置中定义它们。以“+”开头 "),t("code",[e._v("matchers")]),e._v(" 字符串，将其他匹配器添加到默认匹配器中，或不替换它们。")],1),e._v(" "),t("h3",{attrs:{id:"e-multiprofile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#e-multiprofile"}},[e._v("#")]),e._v(" e）"),t("code",[e._v("multiProfile")])]),e._v(" "),t("p",[e._v("它指示是否必须同时保留多个认证（以及多个配置文件）。它是一个可选参数，默认为 "),t("code",[e._v("false")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"_3-profilestoragedecision"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-profilestoragedecision"}},[e._v("#")]),e._v(" 3）"),t("code",[e._v("ProfileStorageDecision")])]),e._v(" "),t("p",[e._v("在 "),t("code",[e._v("DefaultSecurityLogic")]),e._v(" 组件中，你可以设置 "),t("code",[e._v("ProfileStorageDecision")]),e._v("，它定义与配置文件相关的决策，如果由直接客户端检索，我们是否必须从中读取这些决策并将其保存到 web 会话中：")]),e._v(" "),t("ul",[t("li",[e._v("默认情况下，将设置 "),t("a",{attrs:{href:"https://github.com/pac4j/pac4j/blob/master/pac4j-core/src/main/java/org/pac4j/core/engine/decision/DefaultProfileStorageDecision.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("DefaultProfileStorageDecision"),t("OutboundLink")],1),e._v("，它仅为间接客户端从 web 会话加载用户配置文件，而不会将配置文件保存到 web 会话中")]),e._v(" "),t("li",[e._v("也可以使用 "),t("a",{attrs:{href:"https://github.com/pac4j/pac4j/blob/master/pac4j-core/src/main/java/org/pac4j/core/engine/decision/AlwaysUseSessionProfileStorageDecision.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("AlwaysUseSessionProfileStorageDecision"),t("OutboundLink")],1),e._v(" 以始终使用 web 会话。")])]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://www.pac4j.org/4.5.x/docs/security-filter.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("原文链接"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=v.exports}}]);